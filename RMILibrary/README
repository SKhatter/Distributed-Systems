In  this  project,  a remote method invocation (RMI)  library is implemented. RMI forwards  method calls over a network connection, permitting objects located on one Java virtual machine to call methods on  another. Users  of  the RMI library  write  code  in  the  usual  Java  style:   remote  methods  appear, syntactially, as regular Java methods.  The only di erence is in how the objects on which the methods are invoked are obtained.

RMI works,  firstly,  by  exposing  an  object  on  one  Java  virtual  machine  as  remotely-accessible,  and secondly, by providing other virtual machines with a way to access this object.  The remotely-accessible object  can  be  thought  of  as  a server in  the  abstract  sense,  since  it  provides  some  services  through its  remotely-accessible  methods.  Each  Java  virtual  machine  that  accesses  this  object  is  then  a client. Therefore,  the RMI library  has  two  major  components:  one  that  simpli es  the  task  of  making  servers remotely-accessible, and another that simpli es the writing of the corresponding clients.
